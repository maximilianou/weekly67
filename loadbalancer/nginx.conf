events{
}
http {

###### kube1.simpledoers.work
  upstream config_kube1 {
    server 192.168.1.111:6443;
  }
  server {
    listen 6443;
    listen [::]:6443;    
    server_name  config.kube1.simpledoers.work;
    location / {
      proxy_pass http://config_kube1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
  upstream http_kube1 {
    server 192.168.1.111:80;
  }
  server {
    listen 80;
    listen [::]:80;    
    server_name  *.kube1.simpledoers.work;
    location / {
      proxy_pass http://http_kube1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
  upstream https_kube1 {
    server 192.168.1.111:443;
  }
  server {
    listen 443;
    listen [::]:443;    
    server_name  *.kube1.simpledoers.work;
    location / {
      proxy_pass http://https_kube1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
######

###### kube2.simpledoers.work
  upstream config_kube2 {
    server 192.168.1.112:6443;
  }
  server {
    listen 6443;
    listen [::]:6443;    
    server_name  config.kube2.simpledoers.work;
    location / {
      proxy_pass http://config_kube2;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
  upstream http_kube2 {
    server 192.168.1.112:80;
  }
  server {
    listen 80;
    listen [::]:80;    
    server_name  *.kube2.simpledoers.work;
    location / {
      proxy_pass http://http_kube2;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
  upstream https_kube2 {
    server 192.168.1.112:443;
  }
  server {
    listen 443;
    listen [::]:443;    
    server_name  *.kube2.simpledoers.work;
    location / {
      proxy_pass http://https_kube2;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
######

###### kube3.simpledoers.work
  upstream config_kube3 {
    server 192.168.1.113:6443;
  }
  server {
    listen 6443;
    listen [::]:6443;    
    server_name  config.kube3.simpledoers.work;
    location / {
      proxy_pass http://config_kube3;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
  upstream http_kube3 {
    server 192.168.1.113:80;
  }
  server {
    listen 80;
    listen [::]:80;    
    server_name  *.kube3.simpledoers.work;
    location / {
      proxy_pass http://http_kube3;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
  upstream https_kube3 {
    server 192.168.1.113:443;
  }
  server {
    listen 443;
    listen [::]:443;    
    server_name  *.kube3.simpledoers.work;
    location / {
      proxy_pass http://https_kube3;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;      
    }
  }
######


#  upstream myproject {
#    server 127.0.0.1:8081;
#    server 127.0.0.1:8082;
#    server 127.0.0.1:8083;
#  }
#  server {
#    listen 8080;
#    listen [::]:8080;    
#    server_name  _;
#    location / {
#      proxy_pass http://myproject;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection 'upgrade';
#        proxy_set_header Host $host;
#        proxy_cache_bypass $http_upgrade;      
#    }
#  }
#  server {
#    listen 8081;
#    location / {
#      return 200 "<h1>Server 1 - AppServer 1</h1>\n";
#    }
#  }
#  server {
#    listen 8082;
#    location / {
#      return 200 "<h1>Server 1 - AppServer 2</h1>\n";
#    }
#  }
#  server {
#    listen 8083;
#    location / {
#      return 200 "<h1>Server 1 - AppServer 3</h1>\n";
#    }
#  }


}

